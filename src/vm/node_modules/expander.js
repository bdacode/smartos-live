#!/usr/node/bin/node

var proptable = require('./proptable');

console.log(
    '/*\n'
    + ' * CDDL HEADER START\n'
    + ' *\n'
    + ' * The contents of this file are subject to the terms of the\n'
    + ' * Common Development and Distribution License, Version 1.0 only\n'
    + ' * (the "License").  You may not use this file except in compliance\n'
    + ' * with the License.\n'
    + ' *\n'
    + ' * You can obtain a copy of the license at http://smartos.org/CDDL\n'
    + ' *\n'
    + ' * See the License for the specific language governing permissions\n'
    + ' * and limitations under the License.\n'
    + ' *\n'
    + ' * When distributing Covered Code, include this CDDL HEADER in each\n'
    + ' * file.\n'
    + ' *\n'
    + ' * If applicable, add the following below this CDDL HEADER, with the\n'
    + ' * fields enclosed by brackets "[]" replaced with your own identifying\n'
    + ' * information: Portions Copyright [yyyy] [name of copyright owner]\n'
    + ' *\n'
    + ' * CDDL HEADER END\n'
    + ' *\n'
    + ' * Copyright (c) 2013, Joyent, Inc. All rights reserved.\n'
    + ' *\n'
    + ' * THIS FILE IS AUTOGENERATED FROM proptable.js DO NOT EDIT!!!\n'
    + ' * CHANGES WILL BE LOST.\n'
    + ' *\n'
    + ' */\n'
    + '\n'
    + 'var utils = require(\'utils\');\n'
    + '\n'
);

var zonexml = {};
Object.keys(proptable.properties).forEach(function (prop) {
    if (proptable.properties[prop].zonexml) {
        zonexml[proptable.properties[prop].zonexml] = {
            objname: prop
                .replace(/^disks./, '')
                .replace(/^filesystems./, '')
                .replace(/^nics./, ''),
            loadValueTranslator: proptable.properties[prop].loadValueTranslator,
            ignore: !!proptable.properties[prop].ignore
        };
    } else {
        console.log('skipping: ' + prop);
    }
});

var output = 'exports.XML_PROPERTIES = '
    + JSON.stringify(zonexml, null, 2) + ';\n\n';


// XXX there's probably a better way to de-string these...
output.split(/\n/).forEach(function (line) {
    var matches;
    var re;

    re = new RegExp('^( *\"loadValueTranslator\": )\"(.*)$');
    matches = line.match(re);
    if (matches) {
        console.log(matches[1] + matches[2].replace('"', ''));
    } else {
        console.log(line);
    }
});

var output = 'exports.BRAND_OPTIONS = '
    + JSON.stringify(proptable.brand_options, null, 2) + ';\n\n';

console.log(output);

